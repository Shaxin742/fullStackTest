#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require("../app");
var debug = require("debug")("node-api-server:server");
var http = require("http");
var ws = require("ws"); // 加入引入ws模块的代码。
var wsUtils = require("../utils/websocket");

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || "3366");
console.log("端口号", port);
app.set("port", port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app); // http服务器

// websocket use
var wsServer = new ws.Server({
  // 加入创建ws服务器的代码。
  port: 3365,
  server: server, // 注意这个server选项，要么挂载在一个已有的http服务器中，要么它会自己创建一个。
  // 这边已经有一个http服务器了，所以我们填上，进行挂载就行了。
});

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

// websocket use
wsServer.on("connection", function (websocket) {
  // 加入这段代码，对连接之后的websocket连接进行配置。
  wsUtils.init(websocket); // 这边的init函数稍后说明。
});

// /**
//  * Normalize a port into a number, string, or false.
//  */
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  console.log(addr);
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
